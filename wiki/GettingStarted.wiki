#summary Getting started with Pedigree - initial checkout and build
#labels Featured

=Checking out=

Make sure you have subversion installed, then check out pedigree:
{{{
svn checkout http://pedigree.googlecode.com/svn/trunk/ pedigree
}}}

=Building=

==CMake==

We require the 2.6 version of CMake. Most distros now ship 2.6, if not you'll have to compile it from source.

{{{
sudo apt-get install libncurses-dev cmake # For ubuntu/debian users
}}}

==Compiling==

`cd` into your pedigree/ directory and `mkdir build`. Pedigree is designed for out-of-source builds, so the object files don't mess up the source tree.

{{{
cd build
cmake -DCROSS=/path/to/your/compilers/i686-elf- ..
}}}

`-DCROSS` should be set to the location of your compiler, with the 'gcc' stubbed out (so that any compiler tool (g++, ld) can be substituted). Pedigree will run a --version on this toolchain to build for the appropriate architecture. You will need an amd64 compiler to compile for x86-64, and a seperate i[3456]86 compiler for 32-bit x86.

You can then graphically configure pedigree by;

{{{
ccmake ..
}}}

Press 'c' to configure. This should then provide you with a list of options. use the arrow keys to scroll, ENTER to toggle options and the 't' key to toggle extra, more advanced options.

With CMake you change the options you want and then keep pressing 'c' until the 'g' option appears. Then press 'g' to generate the Makefiles.

Once you have generated your makefiles, just type `make` to create them. Depending on your target you should get a floppy.img file created and placed in the build directory, or a kernel or bootloader ELF file.

==Running in emulators==

Scripts are provided to run emulators with standard settings - from the build directory;

{{{
../scripts/qemu
../scripts/bochs
}}}

A .vdi image is created for use with VirtualBox, and a .vmdk is created for use with VMWare also.